// Generated by view binder compiler. Do not edit!
package com.example.womensafetyapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.womensafetyapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button updateButton;

  @NonNull
  public final EditText updateDesc;

  @NonNull
  public final ImageView updateImage;

  @NonNull
  public final EditText updateLang;

  @NonNull
  public final EditText updateTitle;

  private ActivityUpdateBinding(@NonNull ScrollView rootView, @NonNull Button updateButton,
      @NonNull EditText updateDesc, @NonNull ImageView updateImage, @NonNull EditText updateLang,
      @NonNull EditText updateTitle) {
    this.rootView = rootView;
    this.updateButton = updateButton;
    this.updateDesc = updateDesc;
    this.updateImage = updateImage;
    this.updateLang = updateLang;
    this.updateTitle = updateTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.updateButton;
      Button updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      id = R.id.updateDesc;
      EditText updateDesc = ViewBindings.findChildViewById(rootView, id);
      if (updateDesc == null) {
        break missingId;
      }

      id = R.id.updateImage;
      ImageView updateImage = ViewBindings.findChildViewById(rootView, id);
      if (updateImage == null) {
        break missingId;
      }

      id = R.id.updateLang;
      EditText updateLang = ViewBindings.findChildViewById(rootView, id);
      if (updateLang == null) {
        break missingId;
      }

      id = R.id.updateTitle;
      EditText updateTitle = ViewBindings.findChildViewById(rootView, id);
      if (updateTitle == null) {
        break missingId;
      }

      return new ActivityUpdateBinding((ScrollView) rootView, updateButton, updateDesc, updateImage,
          updateLang, updateTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
